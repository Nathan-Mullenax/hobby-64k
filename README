What is it?

It's an extensible virtual machine, assembler, and (eventually) a compiler. The idea is to create a semantically dense instruction set to allow non-trivial programs to be squeezed into the 64k format. Toward this end, up to 2^16 user instructions can be defined, and each of these instructions is 4 bytes long: 2 bytes to identify the command, and 2 bytes for the argument. New instructions can be defined at compile-time or at run-time, using the 'lambda' instruction.



Oct 25, 2014
------------
How will 'mnem' pass the arguments of a user-defined assembly routine?

The argument will in a special register. A special set of functions will facilitate extracting fields from the argument.

The instruction definition might specify an interpretation:

x-address    // it's a univeral address (either segment)
regs         // it's two 'near' addresses
scalar       // it's an address and length
short        // it's an integer
chars        // it's two characters.

